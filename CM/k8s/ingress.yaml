apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: course-management-frontend-ingress
  namespace: default
  labels:
    app: course-management-frontend
    component: frontend
  annotations:
    # Nginx Ingress Controller 配置
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    
    # 启用HTTPS
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    
    # 性能优化
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    
    # 静态资源缓存
    nginx.ingress.kubernetes.io/server-snippet: |
      location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
      }
      
      # Gzip 压缩
      gzip on;
      gzip_vary on;
      gzip_min_length 1024;
      gzip_comp_level 6;
      gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/atom+xml image/svg+xml;
      
      # 安全头
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header Referrer-Policy "no-referrer-when-downgrade" always;
spec:
  tls:
  - hosts:
    - your-domain.com
    - www.your-domain.com
    secretName: frontend-tls-secret
  rules:
  - host: your-domain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: course-management-frontend-service
            port:
              number: 80
  - host: www.your-domain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: course-management-frontend-service
            port:
              number: 80

---
# 开发环境 Ingress (可选)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: course-management-frontend-dev-ingress
  namespace: default
  labels:
    app: course-management-frontend
    component: frontend
    environment: development
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - host: dev.your-domain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: course-management-frontend-service
            port:
              number: 80
